\chapter{Improved Methodology for High-throughput RNAseq Experiments}
\chaptermark{Improved RNAseq Methodology}
\label{chap:br}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%                     Background & Aims                             %%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Background, Aims and Hypotheses}

RNA sequencing (RNAseq) is a modern method for genome-wide expression (transcriptome)
quantification. RNAseq works by sequencing the mRNA pool of a cell, tissue or organisms
\autocite{wang_rna-seq:_2009, martin_catalyzing_2013}. As high-throughput, large-scale experiments
such as QTL mapping and Genome Wide Association Studies (GWAS) become more prevalent, increasingly
subtle biological contrasts are being examined. RNAseq is an incredibly sensitive tool to assay
subtle changes in, for example, plant growth environment or subtle genetic variation
\autocite{martin_catalyzing_2013}. Typically, RNAseq analytic methods have been
developed to investigate stark biological comparisons, such as comparison of healthy and diseased or
mutant and wild-type tissues or individuals \autocite{wang_rna-seq:_2009}. In order to
analyse these large scale datasets, updated molecular and analysis methodology must be used.

To gain biological meaning from raw RNAseq data, an analysis pipeline must be employed. In this
context, a pipeline is a series of software components that, in succession, manipulate a dataset to
obtain a biologically relevant result. Best practice pipelines for RNAseq analysis exist
\autocite[e.g.][]{van_verk_rna-seq:_2013}, but often must be manipulated to suit the idiosyncrasies of each
experiment. Thus, an aim in this chapter of my thesis is to create a framework allowing easy
creation of pipelines by non-expert bioinformaticians with limited programming experience, and to
use this framework to create high-performance pipelines suited to analysis of high-throughput RNAseq
experiments.

Additionally, I have conducted an \textit{in silico} experiment to test the effect of sequencing
depth on statistical power of RNAseq experiments. Despite the rapid and continuing reduction in the
cost of high throughput sequencing, it is still a very large component of the overall cost of RNAseq
experiments \autocite{wang_rna-seq:_2009}. This is particularly evident with regards to high
throughput experiments, and is often combated by increasing multiplexing, i.e. reducing the amount
of raw sequence data each sample yields, at a cost to statistical power
\autocite{kumar_high-throughput_2012}. Therefore, I am to determine the optimal trade-off between
sequencing cost and statistical power. Similar experiments suggest an optimal depth of 10 million
reads per sample for Chicken tissue samples \autocite{wang_evaluation_2011}. However due to its
smaller transcriptome size, I hypothesise that the optimal sequencing depth for \textit{Arabidopsis}
will be smaller, specifically between 2 and 5 million reads, or between 48 and 96 libraries per
Illumina HiSeq 2500 sequencing lane (that yield 200 million reads apiece,
\autocite{glenn_field_2011}).


%KEVIN, CONRAD AND OTHER GOOD STATS FOLKS HAVE LOOKED INTO THIS, BECAUSE OF BIOLOGICAL VARIATION THE OPTIMUM IS
%REALLY TO DO AS MANY LINES AS YOU CAN AFFORD, BARCODE EACH, THEN SEQUENCE THE POOL WITH WHATEVER $$ YOU HAVE LEFT, PERHAPS $5K FOR EACH PART
%FOR EXAMPLE 2 LINES AT 100X = THE SAME READS AS 200 LINES AT 1 X, BUT THE COVERAGE IS SPREAD ACROSS SAMPLES REDUCING BIOLOGICAL ERROR.
%EVEN IF A GENE HAS ONLY 100 READS TOTAL. YOU WOULD BE MORE CONFIDENT IF THOSE READS CAME UP MOSTLY IN ONE GENOTYPE AND NOT ANOTHER.
%PERHAPS WHAT YOU CAN SAY IS GIVEN SO MANY SAMPLES WHO MUCH SEQ IS WORTH DOING BEFORE DIMINISHING RETURNS OF MORE COST WHEN
%BIOLOGICAL ERROR DOMINATES. THAT IS WHAT YOU SHOW IN FIG 1.7, SO PERHAPS RETRY ABOVE.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%                         Methods                                   %%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Methods}

\subsection{External RNAseq Datasets}
\label{subsec:br-mth-datasets}

RNAseq datasets created by Peter Crisp and Barry Pogson were used both as trial datasets and
external references in this thesis. The Rapid Recovery Gene Silencing excess light time-course
experiment (hereafter referred to as the RRGS time-course) consists of samples taken in triplicate
from an eleven-point excess light stress and recovery time-course. \textit{A. thaliana} reference
accession Col-0 were grown for 3 weeks under standard laboratory growth conditions ($\approx$ 150
\uE light intensity, 12 hour photoperiod, 21 \degc daytime temperature, 21 \degc night-time
temperature). Whole rosette samples were taken before any treatment, after 30, 60 and 120 minutes of
8x excess light (1000 \uE, unfiltered light from a sodium vapour lamp, hereafter EL), after 60
minutes of EL followed by 7.5, 15, 30 and 60 minutes of recovery under standard growth conditions,
after 60 minutes of EL, followed by 60minutes of recovery, followed by another 60 minutes of EL, and
before and after 60 minutes of EL 24 hours after the original 60 minutes of EL\@. This complex
time-course is illustrated in \autoref{fig:br-mth-pete317timecourse}. RNA extracted from five plants
per replicate was pooled, before Illumina libraries were created using the TruSeq V2 library
preparation kit (part number 15026495) per manufacturer's instructions. These libraries were sequenced
across two Illumina HiSeq 2500 sequencing lanes, yielding the RRGS timecourse RNAseq dataset. This
dataset studies a timecourse over a treatment highly similar to that conducted in the dynamic growth
condition experiment, allowing development and validation of bioinformatic protocols for experiments
of a similar nature.


\begin{figure}[p]
  \begin{center}
    \includegraphics[width=\textwidth]{img/br-mth-pete317timecourse.pdf}
  \end{center}
  \caption{Illustration of the RRGS timecourse. Entire rosettes were harvested in triplicate at
    each indicated time-point along the excess light stress and recovery time-course. Two timepoints
    after a 24 hour recovery period are not show. This figure was created by Peter Crisp, and is
    reproduced with his permission}
  \label{fig:br-mth-pete317timecourse}
\end{figure}

\subsection{Development of an Improved Analysis Pipeline}
\label{subsec:br-mth-pldev}

Bioinformatic experiments were used to validate pipelines against the ``gold standard'' RNAseq
analysis pipeline. In these experiments, programs selected through both literature review and
searches of pre-publication software releases (e.g. software on \url{github.com}) were tested
against a published best-practice pipeline \autocite{van_verk_rna-seq:_2013}. Specifically, the
computational speed and efficiency, and the results obtained with these newer programs were compared
to the analysis pipeline of \textcite{van_verk_rna-seq:_2013}. This enables the development of
higher-performance analysis pipelines suitable to high throughput experiments, with no cost to the
quality of results obtained. A summary of program selections is described in
\autoref{tab:br-mth-programs}.

\begin{landscape}
  \kmdefaulttable
  {br-mth-programs}
  {tables/br-mth-programs.csv}
  {lp{6cm}p{5cm}p{6cm}}
  {Program & Program's Role & Reasons for Selection & References}
  {\pr=prog, \rl=role, \rs=reason, \rf=refs}
  {\texttt{\pr} & \rl & \rs & \rf}
  {Selection of pipeline components and their roles in an RNAseq analysis pipeline. These programs
  were selected by review of relevant literature (References). Brief reasons for selection are
  given, along with references that describe the implementation and validation of these software.}
\end{landscape}

Comparisons between the computational cost of four pipelines were conducted using a sub-sampled
dataset. To demonstrate the improved performance of the \texttt{\justify aln\_subread} pipeline, it
was compared to the \texttt{\justify aln\_tophat}, \texttt{\justify aln\_tophat\_htseq} and
\texttt{\justify aln\_subread\_htseq} pipelines. The \texttt{\justify time} UNIX command was used to
summarise the computational cost of these four pipelines across five identical, independent,
non-simultaneous runs. Four time-points of the RRGS timecourse dataset were sub-sampled to 500,000
reads by running \texttt{\justify seqtk sample -s 10 500000} on both forward and reverse read files,
which extracts 500000 random read pairs preserving read pairing. An ANOVA analysis was performed to
find significant differences in runtime and CPU utilisation between analysis pipelines.

To ensure that the \texttt{\justify subread} aligner and \texttt{\justify featureCounts} produced
comparable results to the analysis pipeline of \textcite{van_verk_rna-seq:_2013}, several diagnostic
measures were used. Firstly, the percentage of reads mapped to the genome, and to protein coding
loci within the genome was computed and compared. Then, sample-wise correlations between gene-wise
counts calculated by each pipeline were calculated. Finally, genes called differentially expressed
by each pipeline were compared. These measures allow verification of pipeline performance at three
major stages in an analysis pipeline: alignment of short reads to a genome, gene-wise count
summarisation, and statiscial testing for differential expression.

\subsection{Measuring the Effect of Sequencing Depth on Analysis of Differential Expression}
\label{subsec:br-mth-depth}

Six samples from the RRGS-Timecourse experiment (see \autoref{subsec:br-mth-datasets}) were
sub-sampled to allow investigation of the effect of sequencing depth on statistical power. To do so,
the command \texttt{\justify seqtk sample -s 10 $X$} was run on each pair of read files for these
six samples, with $X$ (number of reads to sample) set to 1000, 10000, 20000, 50000, 100000, 200000,
500000, 1000000, 2000000, 5000000 and 10000000. This sub-sampled dataset allows for titration of the
optimal sequencing depth (or multiplexing level) for high throughput experiments, balancing
sequencing cost with statistical power.

For each subsampled dataset, the \texttt{\justify km\_subread} pipeline followed by the
\texttt{\justify de\_pairwise} pipeline were applied  to find differential expression between the
control and 30 minute excess light timepoints (these pipelines are described in
\autoref{subsec:br-res-pipeline}). Several metrics were then used to summarise the effect of
sequencing depth on the statistical power of differential expression analysis. The number of genes
called as differentially expressed at each sequencing depth was calculated, as was the common
biological coefficient of variation. A third measure, the log-transformed mean expression level of
the least-expressed differentially expressed gene and the overall least-expressed gene were
calculated. These metrics were plotted against sequencing depth to give a graphical overview of the
effect of reduction of sequencing depth \autoref{fig:br-res-srvsthcount}.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%                         Results                                   %%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Results}
\subsection{A Framework for the Creation of RNAseq Analysis Pipelines}
\label{subsec:br-res-framework}

To allow creation of diverse analysis pipelines suited to the multitude of RNAseq
experimental designs and methodologies, I have implemented a generic framework for the creation of
RNAseq data analysis pipelines. This framework takes the form of ``wrapper scripts'', which act as
wrappers around programs which other authors have created, and ``pipeline'' scripts, which combine
these wrapped programs to perform an analysis. Wrapper scripts are the workhorses of a pipeline
created with this framework, accepting three arguments: an input directory, and output directory,
and arguments to be passed to the underlying program. Given these, the wrapper script will run the
underlying program, automatically detecting input files from the input folder and automatically
accounting for experimental features such as single or paired-end sequence data.  Pipeline scripts
describe processes of analysis of RNAseq data. They combine wrapped programs together to perform an
analysis specific to a dataset. Each pipeline is run in parallel to utilise multi-processor
computers, and every command is comprehensively logged, ensuring reproducibility. By removing the
complexity of command syntax and increasing readability and reproducibility of pipeline workflows, I
have enabled their use by a larger community of biologists without detailed training in
bioinformatics, and ensured the reproducibility of results obtained.

\subsection{An Improved Analysis Pipeline for Large Plant RNAseq Datasets}
\label{subsec:br-res-pipeline}
A series of two-step pipelines to analyse RNAseq datasets have been developed. Step one
(\texttt{\justify aln\_subread}, \texttt{\justify aln\_subjunc} and \texttt{\justify aln\_tophat})
taking raw sequence reads and produces summarised gene-wise counts. Step two (\texttt{\justify
de\_glm} or \texttt{\justify de\_pairwise}) applies statistical normalisation techniques and tests
for differential expression. When applied combinatorially, these pipelines allow for different
experimental designs to be analysed. \autoref{tab:br-mth-programs} describes each software element
of these pipelines, reasons for their selection, and references to literature describing each
component.

\subsubsection{The \texttt{\justify aln\_subread} pipeline}
\label{subsubsec:br-res-alnsubread}
In this pipeline, quality of sequencing data is checked using \texttt{\justify fastqc}
\autocite{andrews_fastqc_2012}, sequencing adaptors are removed with \texttt{\justify scythe}
\autocite{buffalo_scythe_2013}, and \texttt{\justify seqtk} removes low quality sequences, before
the quality is again checked using \texttt{\justify fastqc}. The \texttt{\justify subread} aligner,
a very fast RNAseq-compatible short read aligner, then aligns reads to the current TAIR10 \textit{A.
thaliana} reference genome. Gene expression is summarised gene-wise by counting the number of reads
which align to genic loci with \texttt{\justify featureCounts}, completing the pipeline.

\subsubsection{The  \texttt{\justify aln\_tophat} pipelines}
\label{subsubsec:br-res-alnsplicing}
For studies examining alternative splicing of mRNA transcripts, an aligner able to detect splicing
\textit{de novo} is required \autocite{kim_tophat2:_2013}. \texttt{\justify Tophat2}, one of the
most popular RNAseq aligners, is able to align short reads while detecting slicing isoforms
\autocite{kim_tophat2:_2013}. \texttt{\justify aln\_tophat} is identical to the \texttt{\justify
aln\_subread} pipeline, except it uses the \texttt{\justify Tophat2} aligner, allowing study of
alternative splicing. However, this \textit{de novo} detection of splicing comes at a performance
cost, and is not necessary for simple quantitation of gene expression.

\subsubsection{\texttt{\justify de\_pairwise}}
\label{subsubsec:br-res-depairwise}
For paired experimental designs, pairwise statistical tests can be performed between samples. The
\texttt{\justify de\_pairwise} pipeline implements these tests using the \texttt{\justify edgeR} R
package. This pipeline first reads count files, removes loci not detected above statistical noise
and non-protein coding loci, normalises counts using the trimmed Mean of M values normalisation
method of \textcite{robinson_scaling_2010}. Transcriptome-wide and gene-wise dispersion are then
calculated and tests are conducted between groups described in a keyfile. Tables of differential
expression and diagnostic plots are also created.

\subsubsection{\texttt{\justify de\_glm}}
\label{subsubsec:br-res-deglm}
% for example if experimental factors such as starting growth condition, treatment, genotype, and replicated block exist,
If the experimental design is multi-factorial, pairwise analysis is inadequate and Generalised
Linear Model-based hypothesis testing functions of \texttt{\justify edgeR} are required. This
pipeline fits such models, and tests user-defined contrasts for differential expression. Processes
analogous to those in the \texttt{\justify de\_pairwise} pipeline are performed, yielding similar
tabular and graphical descriptions of differential expression.

\subsection{Comparison of Differential Expression Pipelines}
\label{subsec:br-res-plcommpare}

A large difference in computational cost between four pipelines (\texttt{\justify aln\_subread},
\texttt{\justify aln\_tophat}, \texttt{\justify aln\_tophat\_htseq} and \texttt{\justify \justify
aln\_subread\_htseq}). These differences were significant (ANOVA, 3 degrees of freedom (DF), F=15738
p<2e-16) As is shown graphically in \autoref{fig:br-res-pltimes}, the \texttt{\justify aln\_subread}
is the fastest, followed by the \texttt{\justify aln\_subread\_htseq} pipeline, the \texttt{\justify
aln\_tophat} and the \texttt{\justify aln\_tophat\_htseq}. The computational time can become a
limitation in very large and heavily replicated data sets such as those needed to identify important
effects of environment on common genetic variation.

\begin{figure}[p]
  \begin{center}
    \includegraphics[width=\textwidth]{img/br-res-pltimes.pdf}
  \end{center}
  \caption{Computational cost of the \texttt{\justify aln\_subread}, \texttt{\justify aln\_tophat},
  \texttt{\justify aln\_tophat\_htseq} and \texttt{\justify aln\_subread\_htseq} RNAseq analysis pipelines differs
    significantly. The ``real'' computational cost describes the number of minutes each pipeline took to
    complete. The ``user'' and ``sys'' metrics describe the number of CPU-minutes spent running user
    code (i.e. the pipeline components) and performing kernel operations on behalf of user code (e.g.
    input/output, memory (de)allocation and other system calls) for each pipeline execution.}
  \label{fig:br-res-pltimes}
\end{figure}

Quantification of gene expression by the \texttt{\justify aln\_subread} pipeline is comparable to
that obtained by the \texttt{\justify aln\_tophat} pipeline. As shown in
\autoref{fig:br-res-srvsthcount}, there is a very tight relationship between counts produced by the
Tophat2 and subread aligners. The slope of $log(n +1)$ transformed raw count data when the model
$tophat counts \sim subread counts$ is fitted is 0.994, with p < 2e-16 and $R^2$ of 0.993. This
indicates that there is approximately 0.7\% statistical variation between these aligners.
\autoref{tab:br-res-plmapping} illustrates the increased percentage of reads the \texttt{\justify
aln\_subread} pipeline is able to align to both the entire genome and to the protein-coding
transcriptome, when compared to the \texttt{\justify aln\_tophat} pipeline.

\begin{figure}[p]
  \begin{center}
    \includegraphics[width=\textwidth]{img/br-res-srvsthcount.pdf}
  \end{center}
  \caption{Comparison of gene-wise counts derived from the Tophat2 and subread short read aligners.
    A tight relationship is observed between count data from these aligners. If aligner had no
    effect, all points (genes) would fall exactly on the $y=x$ line. There are off-diagonal points,
    however these occur mostly at low expression levels and are likely due to the required log
    transformation of count data. Note that there are almost 18,000 genes plotted here, and
    off-diagonal scatter may, by eye, appear exaggerated.}
  \label{fig:br-res-srvsthcount}
\end{figure}

\kmdefaulttable
{br-res-plmapping}
{./tables/br-res-plmapping.csv}
{lcc}
{\multirow{2}{*}{Pipeline Name} & \multicolumn{2}{c}{Percentage Reads Mapped}\\
& Entire Genome & Protein-coding Genes}
{\nm=Pipeline, \gen=Genome, \prot=Protein}
{\nm & \gen & \prot}
{Percentage of mapped reads to genome and transcriptome. The \texttt{\justify aln\_subread} pipeline
is able to map a slightly higher percentage of reads to both the genome and to the transcriptome
when compared to the \texttt{\justify aln\_tophat} pipeline. This indicates it's increased
sensitivity, and echoes findings by its authors \autocite{liao_subread_2013}}


\subsection{Substantial reduction of RNAseq coverage is possible}
\label{subsec:br-res-coverage}

While high-throughput sequencing has reduced sequencing costs dramatically, costs have stabilised in
recent years \autocite{glenn_field_2011}. Multiplexing many samples per lane is important for
high-throughput transcriptomics to increase replication to improve estimates of gene expression, and
to increase sample breadth to better estimate transcriptome variation due to genetic or treatment
effects.  However, improvement to statistical power from increased sequencing depth diminishes as
sequencing depth increases as the number of genes called as differentially expressed increases in a
non-linear fashion with sequencing depth (\autoref{fig:br-res-detagsvscoverage}). Below a lower
limit --- 5 million reads --- the number of genes called as differentially expressed reduces
rapidly. This is concomitant with a decrease in number of genes whose expression is considered, and
increases in biological coefficient of variation (data not shown). For the experimental system used
in this experiment, I would recommend an optimal sequencing depth of approximately 5 million reads
(or read pairs) to balance statistical power against additional sequencing cost. Budget permitting,
more biological replicates or treatments should be included before sequencing is performed. These
results have important implications for experimental design of future experiments.


\begin{figure}[p]
  \begin{center}
    \includegraphics[width=\textwidth]{img/br-res-detagsvscoverage.pdf}
  \end{center}
  \caption{Decreasing sequencing depth per sample decreases the number of genes called as
    differentially expressed. This occurs because the total number of genes which can be examined
    for differential expression decreases in a similar fashion (data not shown). At 5 million reads
    per sample, approximately 80\% of genes differentially expressed with full datasets (12-17
    million reads) are found to be differentially expressed. At 2 million reads, this figure falls to
    approximately 50\%, indicating at least 5 million reads are required to detect the majority of
    genes differentially expressed with three biological replicates.}
  \label{fig:br-res-detagsvscoverage}
\end{figure}

\section{Summary and Technical Discussion}
\label{sec:br-summ}

In this chapter, I have implemented a framework allowing easier creation and optimisation of RNAseq
analysis pipelines. Via literature review and brief experimental validation, I have selected
software optimised for accuracy and speed in analysis of RNAseq data. Generic analysis pipelines that
utilise these software have been created to allow investigation of common RNAseq experimental
designs. Subtle transcriptional variation requires software to be optimised for accuracy and
statistical rigour, while optimising software for performance allows end users to conduct their own
analyses, ensuring and end-to-end understanding of their experiments. Emphasis has been placed on
reproducible analysis of RNAseq, ensuring the validity and reproducibility of results obtained. These
advances allow for the examination of subtle transcriptome variation, such as between
different growth conditions or subtle genetic variation.
